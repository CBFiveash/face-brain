{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charl\\\\react-apps\\\\face-brain\\\\src\\\\components\\\\Particles\\\\Particles.js\",\n    _s = $RefreshSig$();\n\nimport Particles from 'react-tsparticles';\nimport { loadSlim } from 'tsparticles-slim'; // import { loadFull } from 'tsparticles';\n\nimport { useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParticlesComponent = () => {\n  _s();\n\n  const options = useMemo(() => {\n    return {\n      // background: {\n      //     color: \"#000\", //this sets background color of canvas\n      // },\n      fullScreen: {\n        enable: true,\n        // enabling makes canvas fill the entire screen (default = true)\n        zIndex: 0 // used when \n\n      },\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\" // adds particles on click\n\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\" // makes particles run away from cursor\n\n          }\n        },\n        modes: {\n          push: {\n            quantity: 10 // number of particles added on click\n\n          },\n          repulse: {\n            distance: 75 // distance of the particles from cursor\n\n          }\n        }\n      },\n      particles: {\n        links: {\n          enable: true,\n          distance: 115 // max distance for linking the particles\n\n        },\n        move: {\n          enable: true,\n          speed: {\n            min: 1,\n            max: 3\n          }\n        },\n        opacity: {\n          value: {\n            min: 0.3,\n            max: 0.7\n          }\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 3\n          }\n        }\n      }\n    };\n  }, []);\n  const particlesInit = useCallback(engine => {\n    loadSlim(engine);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    init: particlesInit,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ParticlesComponent, \"S09+AMUDbBeUwQCtb/KU1O30zJc=\");\n\n_c = ParticlesComponent;\nexport default ParticlesComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["Particles","loadSlim","useCallback","useMemo","ParticlesComponent","options","fullScreen","enable","zIndex","interactivity","events","onClick","mode","onHover","modes","push","quantity","repulse","distance","particles","links","move","speed","min","max","opacity","value","size","particlesInit","engine"],"sources":["C:/Users/charl/react-apps/face-brain/src/components/Particles/Particles.js"],"sourcesContent":["import Particles from 'react-tsparticles';\r\nimport { loadSlim } from 'tsparticles-slim';\r\n// import { loadFull } from 'tsparticles';\r\nimport { useCallback, useMemo } from 'react';\r\n\r\nconst ParticlesComponent = () => {\r\n    const options = useMemo(() => { \r\n        return {\r\n            // background: {\r\n            //     color: \"#000\", //this sets background color of canvas\r\n            // },\r\n            fullScreen: {\r\n                enable: true, // enabling makes canvas fill the entire screen (default = true)\r\n                zIndex: 0, // used when \r\n            },\r\n            interactivity: {\r\n                events: {\r\n                    onClick: {\r\n                        enable: true,\r\n                        mode: \"push\", // adds particles on click\r\n                    },\r\n                    onHover :{\r\n                        enable: true,\r\n                        mode: \"repulse\", // makes particles run away from cursor\r\n                    },\r\n                },\r\n                modes: {\r\n                    push: {\r\n                        quantity: 10, // number of particles added on click\r\n                    },\r\n                    repulse: {\r\n                        distance: 75, // distance of the particles from cursor\r\n                    },\r\n                },\r\n            },\r\n            particles: {\r\n                links: {\r\n                    enable: true,\r\n                    distance: 115, // max distance for linking the particles\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    speed: { min: 1, max: 3 },\r\n                },\r\n                opacity: {\r\n                    value: { min: 0.3, max: 0.7 },\r\n                },\r\n                size: {\r\n                    value: { min: 1, max: 3 },\r\n                }\r\n            },\r\n        };\r\n    },  []);\r\nconst particlesInit = useCallback((engine) => {\r\n    loadSlim(engine);\r\n}, []);\r\nreturn <Particles init={particlesInit} options={options} />;\r\n};\r\n\r\nexport default ParticlesComponent;"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;EAAA;;EAC7B,MAAMC,OAAO,GAAGF,OAAO,CAAC,MAAM;IAC1B,OAAO;MACH;MACA;MACA;MACAG,UAAU,EAAE;QACRC,MAAM,EAAE,IADA;QACM;QACdC,MAAM,EAAE,CAFA,CAEG;;MAFH,CAJT;MAQHC,aAAa,EAAE;QACXC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLJ,MAAM,EAAE,IADH;YAELK,IAAI,EAAE,MAFD,CAES;;UAFT,CADL;UAKJC,OAAO,EAAE;YACLN,MAAM,EAAE,IADH;YAELK,IAAI,EAAE,SAFD,CAEY;;UAFZ;QALL,CADG;QAWXE,KAAK,EAAE;UACHC,IAAI,EAAE;YACFC,QAAQ,EAAE,EADR,CACY;;UADZ,CADH;UAIHC,OAAO,EAAE;YACLC,QAAQ,EAAE,EADL,CACS;;UADT;QAJN;MAXI,CARZ;MA4BHC,SAAS,EAAE;QACPC,KAAK,EAAE;UACHb,MAAM,EAAE,IADL;UAEHW,QAAQ,EAAE,GAFP,CAEY;;QAFZ,CADA;QAKPG,IAAI,EAAE;UACFd,MAAM,EAAE,IADN;UAEFe,KAAK,EAAE;YAAEC,GAAG,EAAE,CAAP;YAAUC,GAAG,EAAE;UAAf;QAFL,CALC;QASPC,OAAO,EAAE;UACLC,KAAK,EAAE;YAAEH,GAAG,EAAE,GAAP;YAAYC,GAAG,EAAE;UAAjB;QADF,CATF;QAYPG,IAAI,EAAE;UACFD,KAAK,EAAE;YAAEH,GAAG,EAAE,CAAP;YAAUC,GAAG,EAAE;UAAf;QADL;MAZC;IA5BR,CAAP;EA6CH,CA9CsB,EA8CnB,EA9CmB,CAAvB;EA+CJ,MAAMI,aAAa,GAAG1B,WAAW,CAAE2B,MAAD,IAAY;IAC1C5B,QAAQ,CAAC4B,MAAD,CAAR;EACH,CAFgC,EAE9B,EAF8B,CAAjC;EAGA,oBAAO,QAAC,SAAD;IAAW,IAAI,EAAED,aAAjB;IAAgC,OAAO,EAAEvB;EAAzC;IAAA;IAAA;IAAA;EAAA,QAAP;AACC,CApDD;;GAAMD,kB;;KAAAA,kB;AAsDN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}